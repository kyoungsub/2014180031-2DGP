from pico2d import *

# Key event
SHOOT_UP, SHOOT_DOWN, JUMP_DOWN, JUMP_UP = range(4)
key_event_table = {
    (SDL_KEYDOWN, SDLK_LCTRL): SHOOT_UP,
    (SDL_KEYDOWN, SDLK_SPACE): JUMP_DOWN,
    (SDL_KEYUP, SDLK_LCTRL): SHOOT_DOWN,
    (SDL_KEYUP, SDLK_SPACE): JUMP_UP
}

class IdleState:
    @staticmethod
    def enter(player, event):
        pass
    @staticmethod
    def exit(player, event):
        pass
    @staticmethod
    def do(player):
        pass
    @staticmethod
    def draw(player):
        if player.dir == 1:
            player.image.clip_draw(player.frame * 100, 300, 100, 100, boy.x, boy.y)
        else:
            player.image.clip_draw(player.frame * 100, 200, 100, 100, boy.x, boy.y)


class player:

    def __init__(self):
        self.x, self.y = 40, 90
        self.image = load_image('\Resource\Object\player\Archer.png')
        self.dir = 1
        self.velocity = 0
        self.frame = 0
        self.timer = 0
        self.event_que = []
        self.cur_state = IdleState
        self.cur_state.enter(self, None)

    def change_state(self,  state):
        if len(self.event_que) > 0:
            event = self.event_que.pop()
            self.cur_state.exit(self, event)
            self.cur_state = next_state_table[self.cur_state][event]
            self.cur_state.enter(self, event)

    def add_event(self, event):
        self.event_que.insert(0, event)

    def update(self):
        self.cur_state.do(self)
        if len(self.event_que) > 0:
            event = self.event_que.pop()
            self.cur_state.exit(self, event)
            self.cur_state = next_state_table[self.cur_state][event]
            self.cur_state.enter(self, event)

    def draw(self):
        self.cur_state.draw(self)

    def handle_event(self, event):
        if (event.type, event.key) in key_event_table:
            key_event = key_event_table[(event.type, event.key)]
            self.add_event(key_event)